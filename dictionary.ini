include <dict.base.ini> #基本路径
include <rtdata.ini> # 实时数据
include <barra.ini> # 实时数据
include <am.ini> # am data
include </qp/data/msci_data/msci.ini> # msci data
include </qp/data/ini_qp/mb.ini>
include </qp/data/ini_qp/mbcore.ini>

[] 
QP_BIN_DIR = %BASE_BIN_DIR%/core/
QP_MONTH_BIN_DIR = %BASE_BIN_DIR%/month/core/
QP_NEW_BIN_DIR = %BASE_BIN_DIR%/stdata_wind/

[DataDictionary]

# cumulative daily adjustment factor to convert from unadjusted price to adjusted price for each stock, adjfactor <= 1
adjfactor      = [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjfactor.bin:Date|Asset:mmap ]

# adjusted close price = unadjusted close * adjfactor 停牌：向前填充 | 未上市：0| 退市：0 
adjusted_close = [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjclose.bin:Date|Asset:valid=1500:mmap %RTMBSnapLast% ]
  
# adjusted open price = unadjusted open * adjfactor  停牌：填充adjusted_close_price价格 | 未上市：0| 退市：0
adjusted_open  = [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjopen.bin:Date|Asset:mmap %RTMBSnapOpen% ]

# adjusted daily high = unadjusted daily high * adjfactor 停牌：填充adjusted_close_price价格 | 未上市：0| 退市：0
adjusted_high  = [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjhigh.bin:Date|Asset:valid=1500:mmap ]

# adjusted daily low = unadjusted daily low * adjfactor 停牌：填充adjusted_close_price价格 | 未上市：0| 退市：0
adjusted_low   = [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjlow.bin:Date|Asset:valid=1500:mmap ]

# adjusted daily volume = unadjusted daily volumn / adjfactor 停牌：0 | 未上市：0| 退市：0
adjusted_volume= [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjvolume.bin:Date|Asset:valid=1500:mmap ]

unadjusted_volume= [ UniverseBinary:%QP_NEW_BIN_DIR%/volume.bin:Date|Asset:valid=1500:mmap %RTMBSnapVolume% ]

# 总市值 market cap in RMB = unadjusted_close * 总股本
cap            = [ 
                    UniverseBinary:%QP_NEW_BIN_DIR%/cap.bin:Date|Asset:mmap  
                 ]

# 21 day median liquidity  (yesterday's adjusted close price * 21 day median ajusted volume)
liq21          = [ 
                    UniverseBinary:%QP_NEW_BIN_DIR%/liq21.bin:Date|Asset:mmap  
                 ]

# 101 day median liquidity (yesterday's adjusted close price * 101 day median ajusted volume)
liq101         = [ 
                    UniverseBinary:%QP_NEW_BIN_DIR%/liq101.bin:Date|Asset:mmap  
                 ]

# 21 day median adjusted volume
mdv21          = [ 
                    UniverseBinary:%QP_NEW_BIN_DIR%/mdv21.bin:Date|Asset:mmap  
                 ]

# 101 day median adjusted volume
mdv101         = [ 
                    UniverseBinary:%QP_NEW_BIN_DIR%/mdv101.bin:Date|Asset:mmap  
                 ]

# 停牌：0 | 未上市：0| 退市：0
unadjusted_close = [ UniverseBinary:%QP_NEW_BIN_DIR%/uclose.bin:Date|Asset:valid=1500:mmap 
                     %RTMBSnapLast% ] 

# 停牌：0 | 未上市：0| 退市：0
unadjusted_open = [ UniverseBinary:%QP_NEW_BIN_DIR%/uopen.bin:Date|Asset:mmap %RTMBSnapOpen% ]

# 停牌：0 | 未上市：0| 退市：0
unadjusted_low   = [ UniverseBinary:%QP_NEW_BIN_DIR%/ulow.bin:Date|Asset:valid=1500:mmap %RTMBSnapLow% ]

# 停牌：0 | 未上市：0| 退市：0
unadjusted_high   = [ UniverseBinary:%QP_NEW_BIN_DIR%/uhigh.bin:Date|Asset:valid=1500:mmap %RTMBSnapHigh% ]

#总股本，经过验算cap = so * unadjusted_close
shares_outstanding = [ UniverseBinary:%QP_NEW_BIN_DIR%/shares_outstanding.bin:Date|Asset:mmap ]

# adjusted_daily_vwap = unadjusted_daily_vwap * adjfactor || 直接从数据库取出，vwap.bin矩阵行数比close.bin矩阵行数多 上个月末日期到今天为止的交易日 的天数
adjusted_daily_vwap = [ UniverseBinary:%QP_NEW_BIN_DIR%/preadjvwapsum.bin:Date|Asset:mmap ]

# 是否为一字涨停或一字跌停 0|1
uplim = [ UniverseBinary:%QP_NEW_BIN_DIR%/uplim.bin:Date|Asset:mmap ]
dnlim = [ UniverseBinary:%QP_NEW_BIN_DIR%/dnlim.bin:Date|Asset:mmap ]

# 成交金额, 只有实时行情
trading_amount   = [ %RTMBSnapTurnover% ]

#day over day share (and price) adjustment factor
#stock return from day i-1 to day i = (unadjusted close on day i * split on day i ) / unadjusted close on day i-1   - 1.0
#div.share.bin矩阵绝大部分是1，最小也是1，在有分红的日期依旧为1，eg.split['20180628','603999']. 在有送股的日期大于1，split['20170703','603999']=2 (10股派10股)
split = [ UniverseBinary:%QP_NEW_BIN_DIR%/split.bin:Date|Asset:mmap ]

#未复权的vwap价格
unadjusted_daily_vwap = [ UniverseBinary:%QP_NEW_BIN_DIR%/uvwapsum.bin:Date|Asset:mmap %RTMBSnapVwap% ]

# Shengwan industry classification
indsw = [ UniverseBinary:%QP_BIN_DIR%/indsw.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/indsw.bin:Date|Asset:mmap ]

# Guozhen industry classification
indgz = [ UniverseBinary:%QP_BIN_DIR%/indgz.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/indgz.bin:Date|Asset:mmap ]

# ZX industry classification || 没有行业分类的股票分类为 0，eg. '002335' 2010年1月13号 上市，但2010年1月27号才有分类   
# indzx['20100113'，‘002335’]==0 indzx['20100127'，‘002335’]== 1126020100
# 行业分类一共十位数字，11（通用）26（一级行业）02（二级行业）01（三级行业）00（四级行业）
indzx = [ UniverseBinary:%QP_NEW_BIN_DIR%/indzx.bin:Date|Asset:mmap ]

# an indicator for index instruments.|| 指数示性函数，除了最后四列指数为1，其余列均为0。
indexflag = [ UniverseBinary:%QP_NEW_BIN_DIR%/indexflag.bin:Date|Asset:mmap ]

#流通市值
cap2           = [ UniverseBinary:%QP_NEW_BIN_DIR%/cap2.bin:Date|Asset:mmap ]

# 日换手率=unadjusted_volume/流通股数
turnover        = [ UniverseBinary:%QP_NEW_BIN_DIR%/turnover.bin:Date|Asset:mmap  ]

# 1 if stock is delisted,股票退市的示性函数，如果退市为1，否则为零。
delisted        = [ UniverseBinary:%QP_NEW_BIN_DIR%/delisted.bin:Date|Asset:mmap ]

# 1 if stock is not a recent IPO stock || 从上市之日起29个交易日内值都为0，当前是过去29天有一天处于未上市或者停牌状态则，该天值为0
# eg. '601968' 20150611上市，20150611-20150722 都为零（29个交易日），20150723开始为1
# eg. '601965' 20120611上市，20120611-20120720都为零（29个交易日），20120723开始为1
# eg. '000005' 20110503-20120424 停牌了近一年， 在这段时间内及附近都是 0
nonipo        = [ UniverseBinary:%QP_BIN_DIR%/nonipo.bin:Date|Asset:mmap ]

#st股票示性函数，股票名上带有st和st*为 1，st消掉之后为 0
f.st = [ UniverseBinary:%QP_NEW_BIN_DIR%/st.bin:Date|Asset:mmap ]

#新股一字板示性函数，eg '601968' 20150611上市，20150611-20150626为一字板，值为1，20150629开始不为一字板，值为0；未上市也为0
#f.new = [ UniverseBinary:%QP_BIN_DIR%/tnew.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/tnew.bin:Date|Asset:mmap ]
f.new = [ UniverseBinary:%QP_NEW_BIN_DIR%/snew.bin:Date|Asset:mmap ]

#次新股示性函数，上市之后6个月内都属于次新股
f.snew = [ UniverseBinary:%QP_NEW_BIN_DIR%/snew.bin:Date|Asset:mmap ]

#股息率=一年的总派息额与当时市价的比例  ?? eg.div.ratio['20180706','600336']= 0
#div.ratio      = [ UniverseBinary:%QP_BIN_DIR%/div.ratio.bin:Date|Asset:mmap  UniverseBinary:%QP_MONTH_BIN_DIR%/div.ratio.bin:Date|Asset:mmap]
div.ratio = [ UniverseBinary:%QP_NEW_BIN_DIR%/div.ratio1.bin:Date|Asset:mmap ]

#至少属于以下类别中的一种：市值top500 | sse50 | sse180 | csi300 
estu = [ UniverseBinary:%QP_BIN_DIR%/estu.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/estu.bin:Date|Asset:mmap ]

#未上市和停牌为0，其余为1
estu.r = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.r.bin:Date|Asset:mmap ]

#属于上证180指数 示性函数，其余类似
sse180 = [ UniverseBinary:%QP_BIN_DIR%/sse180.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/sse180.bin:Date|Asset:mmap ]
sse50  = [ UniverseBinary:%QP_NEW_BIN_DIR%/sse50.bin:Date|Asset:mmap]
csi500 = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi500.bin:Date|Asset:mmap ]
csi800 = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi800.bin:Date|Asset:mmap ]
csi300 = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi300.bin:Date|Asset:mmap ]

#csi500 * estu.r 属于estu.r 且 属于csi500，其余类似
estu.csi500 = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.csi500.bin:Date|Asset:mmap ]
estu.csi800 = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.csi800.bin:Date|Asset:mmap ]
estu.csi300 = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.csi300.bin:Date|Asset:mmap ]
#estu.csi500 = [ UniverseBinary:%QP_BIN_DIR%/estu.csi500.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/estu.csi500.bin:Date|Asset:mmap ]
#estu.csi800 = [ UniverseBinary:%QP_BIN_DIR%/estu.csi800.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/estu.csi800.bin:Date|Asset:mmap ]
#estu.csi300 = [ UniverseBinary:%QP_BIN_DIR%/estu.csi300.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/estu.csi300.bin:Date|Asset:mmap ]


#分红金额，eg dividend['20180706','600336']=0.03 (该股票分红信息：2018-07-06：10派 0.3)，除权除息当天有值，其余都为0
dividend = [ UniverseBinary:%QP_NEW_BIN_DIR%/dividend.bin:Date|Asset:mmap ]

############# barra data #############

#barra十个因子合在一起的三维张量
barra_factors = [ UniverseBinary3D:%QP_BIN_DIR%/bfac.bin:Date|Asset|Factor:mmap UniverseBinary3D:%QP_MONTH_BIN_DIR%/bfac.bin:Date|Asset|Factor:mmap ]

#barra的行业分类，共32个不同种类，没上市为0
# IndCode   Name
#---------------------
# 1         ENERGY  
# 2         CHEM    
# 3         CONMAT  
# 4         MTLMIN  
# 5         MATERIAL
# 6         AERODEF 
# 7         BLDPROD 
# 8         CNSTENG 
# 9         ELECEQP 
# 10        INDCONG 
# 11        MACH    
# 12        TRDDIST 
# 13        COMSERV 
# 14        AIRLINE 
# 15        MARINE  
# 16        RDRLTRAN
# 17        AUTO    
# 18        HOUSEDUR
# 19        LEISLUX 
# 20        CONSSERV
# 21        MEDIA   
# 22        RETAIL  
# 23        PERSPRD 
# 24        BEV     
# 25        FOODPROD
# 26        HEALTH  
# 27        BANKS   
# 28        DVFININS
# 29        REALEST 
# 30        SOFTWARE
# 31        HDWRSEMI
# 32        UTILITIE
barra_ind = [ UniverseBinary:%QP_BIN_DIR%/ind.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/ind.bin:Date|Asset:mmap ]

# barra forecasted total risk, percent, annualized
barra_trisk = [ UniverseBinary:%QP_BIN_DIR%/trisk.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/trisk.bin:Date|Asset:mmap ]

# barra forecasted specific risk, percent, annualzied
barra_srisk = [ UniverseBinary:%QP_BIN_DIR%/srisk.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/srisk.bin:Date|Asset:mmap ]

############### mb data ##############
#mb data include from ini_qp
#snapshot型数据(来自Quotes),tick数据中最接近该时刻的那条数据的 买一（bid1）和卖一(ask1)的平均值
mid.b5 = [ UniverseBinary3D:%QP_BIN_DIR%/mid.b5.bin:Date|Asset|Time:mmap 
           UniverseBinary3D:%QP_MONTH_BIN_DIR%/mid.b5.bin:Date|Asset|Time:mmap 
           UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.mid.b5.bin:Date|Asset|Time:mmap 
           %RTMBMid% ]
mid.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/mid.b15.bin:Date|Asset|Time:mmap 
            UniverseBinary3D:%QP_MONTH_BIN_DIR%/mid.b15.bin:Date|Asset|Time:mmap 
            UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.mid.b15.bin:Date|Asset|Time:mmap 
            %RTMBMid% ]
mid.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/mid.b30.bin:Date|Asset|Time:mmap 
            UniverseBinary3D:%QP_MONTH_BIN_DIR%/mid.b30.bin:Date|Asset|Time:mmap 
            UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.mid.b30.bin:Date|Asset|Time:mmap 
            %RTMBMid% ]

# trading allow value table:
#   0: not allowe#d
#   1: buy allowed
#   2: sell allowed
#   3: both allowed
tradingallowed.b5 = [ UniverseBinary3D:%QP_BIN_DIR%/tradingallowed.b5.bin:Date|Asset|Time:mmap 
                      UniverseBinary3D:%QP_MONTH_BIN_DIR%/tradingallowed.b5.bin:Date|Asset|Time:mmap 
                      UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.tradingallowed.b5.bin:Date|Asset|Time:mmap
                      %RTMBTradingAllowed% ]
tradingallowed.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/tradingallowed.b15.bin:Date|Asset|Time:mmap 
                       UniverseBinary3D:%QP_MONTH_BIN_DIR%/tradingallowed.b15.bin:Date|Asset|Time:mmap 
                       UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.tradingallowed.b15.bin:Date|Asset|Time:mmap 
                       %RTMBTradingAllowed% ]
tradingallowed.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/tradingallowed.b30.bin:Date|Asset|Time:mmap 
                       UniverseBinary3D:%QP_MONTH_BIN_DIR%/tradingallowed.b30.bin:Date|Asset|Time:mmap 
                       UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.tradingallowed.b30.bin:Date|Asset|Time:mmap 
                       %RTMBTradingAllowed% ]

# snapshot型数据(来自Quotes)，tick数据中最接近该时刻的那条数据是否处于涨停状态，判断涨停的方法是 该条tick数据中ask_volume（卖1 至 卖10）全为零，
# bid_volume(买1 至 买10) 不全为零。对于SZ的数据处理稍有差别，但理念类似。
limitup.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/limitup.b30.bin:Date|Asset|Time:mmap 
                UniverseBinary3D:%QP_MONTH_BIN_DIR%/limitup.b30.bin:Date|Asset|Time:mmap 
                %RTMBLimitUp% ]
limitup.b5 = [ UniverseBinary3D:%QP_BIN_DIR%/limitup.b5.bin:Date|Asset|Time:mmap 
               UniverseBinary3D:%QP_MONTH_BIN_DIR%/limitup.b5.bin:Date|Asset|Time:mmap 
               %RTMBLimitUp% ]
limitup.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/limitup.b15.bin:Date|Asset|Time:mmap 
                UniverseBinary3D:%QP_MONTH_BIN_DIR%/limitup.b15.bin:Date|Asset|Time:mmap 
                %RTMBLimitUp% ]

# snapshot型数据(来自Quotes)，tick数据中最接近该时刻的那条数据是否处于涨停状态，判断涨停的方法是 该条tick数据中ask_volume（卖1 至 卖10）不全为零，
# bid_volume(买1 至 买10) 全为零。对于SZ的数据处理稍有差别，但理念类似。
limitdown.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/limitdown.b30.bin:Date|Asset|Time:mmap 
                  UniverseBinary3D:%QP_MONTH_BIN_DIR%/limitdown.b30.bin:Date|Asset|Time:mmap 
                  %RTMBLimitDown% ]
limitdown.b5 = [ UniverseBinary3D:%QP_BIN_DIR%/limitdown.b5.bin:Date|Asset|Time:mmap 
                 UniverseBinary3D:%QP_MONTH_BIN_DIR%/limitdown.b5.bin:Date|Asset|Time:mmap 
                 %RTMBLimitDown% ]
limitdown.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/limitdown.b15.bin:Date|Asset|Time:mmap 
                  UniverseBinary3D:%QP_MONTH_BIN_DIR%/limitdown.b15.bin:Date|Asset|Time:mmap 
                  %RTMBLimitDown% ]

# Aggregate型数据(来自Trades)， 最近五分钟内的volume之和，其余类似
volume.b5 = [ UniverseBinary3D:%QP_BIN_DIR%/volume.b5.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/volume.b5.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.volume.b5.bin:Date|Asset|Time:mmap 
              %RTMBVolume% ]
volume.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/volume.b15.bin:Date|Asset|Time:mmap 
               UniverseBinary3D:%QP_MONTH_BIN_DIR%/volume.b15.bin:Date|Asset|Time:mmap 
               UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.volume.b15.bin:Date|Asset|Time:mmap 
               %RTMBVolume% ]
volume.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/volume.b30.bin:Date|Asset|Time:mmap 
               UniverseBinary3D:%QP_MONTH_BIN_DIR%/volume.b30.bin:Date|Asset|Time:mmap 
               UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.volume.b30.bin:Date|Asset|Time:mmap 
               %RTMBVolume% ]

#Aggregate型数据(来自Trades)，最近五分钟内的成交量 * 成交价格 的和
vwapsum.b5 = [ UniverseBinary3D:%QP_BIN_DIR%/vwapsum.b5.bin:Date|Asset|Time:mmap 
               UniverseBinary3D:%QP_MONTH_BIN_DIR%/vwapsum.b5.bin:Date|Asset|Time:mmap ]
vwapsum.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/vwapsum.b15.bin:Date|Asset|Time:mmap 
                UniverseBinary3D:%QP_MONTH_BIN_DIR%/vwapsum.b15.bin:Date|Asset|Time:mmap ] 
vwapsum.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/vwapsum.b30.bin:Date|Asset|Time:mmap 
                UniverseBinary3D:%QP_MONTH_BIN_DIR%/vwapsum.b30.bin:Date|Asset|Time:mmap ]

#snapshot型数据（来自Trades）,transaction数据中最接近该时刻的那条数据的成交价
close.b5  = [ UniverseBinary3D:%QP_BIN_DIR%/tp.b5.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/tp.b5.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.tp.b5.bin:Date|Asset|Time:mmap ]
close.b15 = [ UniverseBinary3D:%QP_BIN_DIR%/tp.b15.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/tp.b15.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.tp.b15.bin:Date|Asset|Time:mmap ]
close.b30 = [ UniverseBinary3D:%QP_BIN_DIR%/tp.b30.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/tp.b30.bin:Date|Asset|Time:mmap 
              UniverseBinary3D:%QP_MONTH_BIN_DIR%/day.tp.b30.bin:Date|Asset|Time:mmap ]


#以下数据为qp模拟交易时，系统默认的分钟线数据信息，如果ini文件中的trade time不是30分钟的整数倍则需要修改。
limitup = %limitup.b30%
limitdown = %limitdown.b30%
unadjusted_vwapsum_mb = %vwapsum.b30%
unadjusted_volume_mb = %volume.b30%
tradingallowed = %tradingallowed.b30%

#unadjusted_price = %unadjusted_close%
unadjusted_price = [ %mid.b30% %RTMBSnapOpen% UniverseBinary:%QP_NEW_BIN_DIR%/uopen.bin:Date|Asset:mmap]

limited.am       = [ UniverseBinary:%QP_NEW_BIN_DIR%/limited.am.bin:Date|Asset:mmap  ]
limited.prop     = [ UniverseBinary:%QP_NEW_BIN_DIR%/limited.prop.bin:Date|Asset:mmap  ]

#blacklist = [ UniverseBinary:%QP_BIN_DIR%/blacklist.bin:Date|Asset:mmap UniverseBinary:%QP_MONTH_BIN_DIR%/blacklist.bin:Date|Asset:mmap ]
# stock price below 1.2 为1，其余为0
blacklist = [ UniverseBinary:%QP_NEW_BIN_DIR%/blacklist.bin:Date|Asset:mmap ]

#--------------- Newly Added ---------------
#后复权价量数据
adjfactor2      = [ UniverseBinary:%QP_NEW_BIN_DIR%/adjfactor.bin:Date|Asset:mmap ]
adjusted_close2 = [ UniverseBinary:%QP_NEW_BIN_DIR%/adjclose.bin:Date|Asset:valid=1500:mmap %RTMBSnapLast% ]
adjusted_open2  = [ UniverseBinary:%QP_NEW_BIN_DIR%/adjopen.bin:Date|Asset:mmap %RTMBSnapOpen% ]
adjusted_high2  = [ UniverseBinary:%QP_NEW_BIN_DIR%/adjhigh.bin:Date|Asset:valid=1500:mmap ]
adjusted_low2   = [ UniverseBinary:%QP_NEW_BIN_DIR%/adjlow.bin:Date|Asset:valid=1500:mmap ]
adjusted_volume2= [ UniverseBinary:%QP_NEW_BIN_DIR%/adjvolume.bin:Date|Asset:valid=1500:mmap ]
adjusted_daily_vwap2 = [ UniverseBinary:%QP_NEW_BIN_DIR%/adjvwapsum.bin:Date|Asset:mmap ]

close       = [ UniverseBinary:%QP_NEW_BIN_DIR%/close.bin:Date|Asset:mmap ]
open        = [ UniverseBinary:%QP_NEW_BIN_DIR%/open.bin:Date|Asset:mmap ]
high        = [ UniverseBinary:%QP_NEW_BIN_DIR%/high.bin:Date|Asset:mmap ]
low         = [ UniverseBinary:%QP_NEW_BIN_DIR%/low.bin:Date|Asset:mmap ]
amount      = [ UniverseBinary:%QP_NEW_BIN_DIR%/amount.bin:Date|Asset:mmap ]
volume      = [ UniverseBinary:%QP_NEW_BIN_DIR%/volume.bin:Date|Asset:mmap ]
change      = [ UniverseBinary:%QP_NEW_BIN_DIR%/change.bin:Date|Asset:mmap ]
pctchange   = [ UniverseBinary:%QP_NEW_BIN_DIR%/pctchange.bin:Date|Asset:mmap ]
vwap        = [ UniverseBinary:%QP_NEW_BIN_DIR%/vwapsum.bin:Date|Asset:mmap ]

csi300_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi300_wt.bin:Date|Asset:mmap ]
csi500_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi500_wt.bin:Date|Asset:mmap ]
csi800_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi800_wt.bin:Date|Asset:mmap ]
csi1000_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi1000_wt.bin:Date|Asset:mmap ]
sse50_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/sse50_wt.bin:Date|Asset:mmap ]
sse180_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/sse180_wt.bin:Date|Asset:mmap ]
sse380_free_wt = [ UniverseBinary:%QP_NEW_BIN_DIR%/sse380_wt.bin:Date|Asset:mmap ]

csi300_weight = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi300_wt.bin:Date|Asset:mmap ]
csi500_weight = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi500_wt.bin:Date|Asset:mmap ]
csi800_weight = [ UniverseBinary:%QP_NEW_BIN_DIR%/csi800_wt.bin:Date|Asset:mmap ]

# dividend before tax
dividend2 = [ UniverseBinary:%QP_NEW_BIN_DIR%/dividend2.bin:Date|Asset:mmap ]

#
estu.a = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.a.bin:Date|Asset:mmap ]

#csi500 * estu.r 属于estu.r 且 属于csi500，其余类似
estu.csi500 = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.csi500.bin:Date|Asset:mmap ]
estu.csi300 = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.csi300.bin:Date|Asset:mmap ]
estu.csi800 = [ UniverseBinary:%QP_NEW_BIN_DIR%/estu.csi800.bin:Date|Asset:mmap ]

#
shares_float = [ UniverseBinary:%QP_NEW_BIN_DIR%/shares_float.bin:Date|Asset:mmap ]
shares_float_a = [ UniverseBinary:%QP_NEW_BIN_DIR%/shares_float.bin:Date|Asset:mmap ]

stop = [ UniverseBinary:%QP_NEW_BIN_DIR%/stop.bin:Date|Asset:mmap ]



[]

[MultifieldSources]
# The entry below is a multi-source, i.e. multiple fields can be extracted from this source
# Individual fields (columns) can be independently defined to have its defaults
# and forward fill policy
# options:
# Date=<int>        column number to find dates (index for first item = 1)
# Sep=<chars>       delimiter(s) to separate the fields
# Skip=<int>        number of lines to skip at the start of the file
# DateSort:         are records sorted by date?, possible values: Ascending,Descending and None
# Cache=<dir>       the directory where binary cache is stored
#FFDaily = SingleAssetCSV:/path/to/csv/files/<TICKER>_.csv:Date=1:sep=,:skip=1:Cache=./cache:DateSort=descending

[]
# vim: syntax=cfg

